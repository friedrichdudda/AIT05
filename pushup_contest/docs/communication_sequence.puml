@startuml Kommunikation
title System Kommunikationsablauf

participant Spieler_1
participant Spieler_2
participant Resource_Directory
participant Schiedsrichter

!pragma teoz true
Spieler_1 -> Spieler_1: discover Resource_Directory via multicast:\ncoap get: /.well-known/core?rt=core.rd*
&Spieler_2 -> Spieler_2: discover Resource_Directory via multicast:\ncoap get: /.well-known/core?rt=core.rd*
Spieler_1 ->> Resource_Directory: coap post: /register
Spieler_2 ->> Resource_Directory: coap post: /register
Schiedsrichter -> Schiedsrichter: discover\nResource_Directory\nvia multicast:\ncoap get:\n/.well-known/core\n?rt=core.rd*
Schiedsrichter -> Resource_Directory: coap get: /endpoint-lookup/?rt=pushups_player
activate Resource_Directory
Resource_Directory --> Schiedsrichter: return registered "Spieler"
deactivate Resource_Directory
Schiedsrichter ->> Spieler_1: coap put: /assign_color [red]
Schiedsrichter ->> Spieler_2: coap put: /assign_color [green]
Schiedsrichter ->> Spieler_1: coap observe: /count
Schiedsrichter ->> Spieler_2: coap observe: /count
Schiedsrichter ->> Spieler_1: coap post: /start
Schiedsrichter ->> Spieler_2: coap post: /start
loop Spieler_1 pusup_count != 10 && Spieler_2 pusup_count != 10
    opt Spieler_1 pushup detected
        Spieler_1 -> Spieler_1: pushup_count += 1
        Spieler_1 ->> Schiedsrichter: notify /count changed
    end
    opt Spieler_2 pushup detected
        Spieler_2 -> Spieler_2: pushup_count += 1
        Spieler_2 ->> Schiedsrichter: notify /count changed
    end
    alt Spieler_1 pusup_count == 10
        Schiedsrichter ->> Spieler_1: coap post: /set_to_winner
        Schiedsrichter ->> Spieler_2: coap post: /set_to_looser
    else Spieler_2 pushup_count == 10
        Schiedsrichter ->> Spieler_2: coap post: /set_to_winner
        Schiedsrichter ->> Spieler_1: coap post: /set_to_looser
    end
end
@enduml
